name: Build Roon Server

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to build from'
        default: 'main'
        required: false
        type: string
  workflow_call:
    inputs:
      branch:
        description: 'Branch to build from'
        default: 'main'
        required: false
        type: string
  push:
    branches:
      - main
  release:
    types: [published]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CACHE_IMAGE: ${{ github.repository }}/buildcache

jobs:
  build:
    name: Build and Push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch || github.ref }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get branch name and determine tags
        id: branch
        run: |
          BRANCH="${{ inputs.branch }}"
          if [ -z "$BRANCH" ]; then
            if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
              BRANCH="main"
            else
              BRANCH=$(echo ${{ github.ref }} | sed -e "s/refs\/heads\///g" | sed -e "s/refs\/pull\///g" | sed -e "s/\/merge//g")
            fi
          fi
          echo "name=$BRANCH" >> $GITHUB_OUTPUT
          
          # Determine if this is a release
          IS_RELEASE="${{ github.event_name == 'release' }}"
          echo "is_release=$IS_RELEASE" >> $GITHUB_OUTPUT

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Tag as 'dev' for main branch pushes
            type=raw,value=dev,enable=${{ steps.branch.outputs.name == 'main' && github.event_name == 'push' }}
            # Tag as 'latest' for releases
            type=raw,value=latest,enable=${{ github.event_name == 'release' }}
            # Tag with version number for releases (e.g., v1.0.0)
            type=ref,event=tag
            # Tag with branch name for manual builds
            type=raw,value=${{ steps.branch.outputs.name }}-latest,enable=${{ github.event_name == 'workflow_dispatch' }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            TZ=America/Los_Angeles
          cache-from: |
            type=registry,ref=${{ env.REGISTRY }}/${{ env.CACHE_IMAGE }}:latest
          cache-to: |
            type=registry,ref=${{ env.REGISTRY }}/${{ env.CACHE_IMAGE }}:latest,mode=max